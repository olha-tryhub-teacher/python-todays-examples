from turtle import *


# --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –µ–∫—Ä–∞–Ω—É ---
screen = Screen()
screen.bgcolor("lightblue")


# --- –ë–∞–∑–æ–≤–∏–π –∫–ª–∞—Å –¥–ª—è –≤—Å—ñ—Ö —Å–ø—Ä–∞–π—Ç—ñ–≤ ---
class Sprite(Turtle):
    def __init__(self, x, y, col, sh):
        super().__init__()
        self.color(col)
        self.shape(sh)
        self.go_to(x, y)


    # –ü–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è —Å–ø—Ä–∞–π—Ç–∞ –±–µ–∑ –º–∞–ª—é–≤–∞–Ω–Ω—è
    def go_to(self, x, y):
        self.penup()
        self.goto(x, y)


    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑—ñ—Ç–∫–Ω–µ–Ω–Ω—è –∑ —ñ–Ω—à–∏–º –æ–±‚Äô—î–∫—Ç–æ–º
    def touch_t(self, t):
        if abs(self.xcor() - t.xcor()) < 20 and abs(self.ycor() - t.ycor()) < 20:
            return True
        return False


# --- –ö–ª–∞—Å –≥—Ä–∞–≤—Ü—è (–∫–µ—Ä—É—î—Ç—å—Å—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏) ---
class Player(Sprite):
    def __init__(self, x, y, col, sh, step_size):
        super().__init__(x, y, col, sh)
        self.step_size = step_size


        # –ü—Ä–∏–≤'—è–∑–∫–∞ –∫–ª–∞–≤—ñ—à –¥–æ —Ñ—É–Ω–∫—Ü—ñ–π —Ä—É—Ö—É
        screen.onkey(self.move_left, "Left")
        screen.onkey(self.move_right, "Right")
        screen.onkey(self.move_down, "Down")
        screen.onkey(self.move_up, "Up")
        screen.listen()


    # –†—É—Ö –≤–ª—ñ–≤–æ
    def move_left(self):
        self.setheading(180)
        self.forward(self.step_size)


    # –†—É—Ö –≤–ø—Ä–∞–≤–æ
    def move_right(self):
        self.setheading(0)
        self.forward(self.step_size)


    # –†—É—Ö –≤–≥–æ—Ä—É
    def move_up(self):
        self.setheading(90)
        self.forward(self.step_size)


    # –†—É—Ö –≤–Ω–∏–∑
    def move_down(self):
        self.setheading(270)
        self.forward(self.step_size)


    # –í–∏–≤–µ–¥–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≥—Ä–∏
    def write_end(self, txt):
        self.go_to(-150, 0)
        self.write(txt, font=("Arial", 30))


# --- –ö–ª–∞—Å –≤–æ—Ä–æ–≥–∞, —â–æ —Ä—É—Ö–∞—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ ---
class Enemy(Sprite):
    def __init__(self, x, y, col, sh, step_size):
        super().__init__(x, y, col, sh)
        self.step_size = step_size


    # –†—É—Ö –≤–æ—Ä–æ–≥–∞ –≤–∑–¥–æ–≤–∂ –æ—Å—ñ X –∑ –≤—ñ–¥–±–∏–≤–∞–Ω–Ω—è–º
    def move(self):
        self.forward(self.step_size)
        if self.xcor() >= 200:
            self.setheading(180)
            self.forward(self.step_size)
        if self.xcor() <= -200:
            self.setheading(0)
            self.forward(self.step_size)


# --- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ –≥—Ä–∏ ---
enemy1 = Enemy(200, 100, "red", "square", 30)
enemy2 = Enemy(-200, -100, "red", "square", 30)
player = Player(0, -180, "navy", "turtle", 10)
finish = Sprite(0, 180, "gold", "triangle")


# --- –û—Å–Ω–æ–≤–Ω–∞ —ñ–≥—Ä–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è (—Ü–∏–∫–ª) ---
def game():
    # –†—É—Ö –≤–æ—Ä–æ–≥—ñ–≤
    enemy1.move()
    enemy2.move()


    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–æ–≥—Ä–∞—à—É
    if player.touch_t(enemy1) or player.touch_t(enemy2):
        player.write_end("I am loose üò≠üò≠üò≠")
        return


    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∏–≥—Ä–∞—à—É
    if player.touch_t(finish):
        player.write_end("I am wiin üòÅüòÅüòÅ")
        return


    # –ü–æ–≤—Ç–æ—Ä–Ω–∏–π –∑–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü—ñ—ó —á–µ—Ä–µ–∑ 100 –º—Å (—Ç–∞–π–º–µ—Ä)
    screen.ontimer(game, 100)


# --- –ó–∞–ø—É—Å–∫ –≥—Ä–∏ ---
game()

done()
